{"version":3,"sources":["wangEditor.js"],"names":["global","factory","exports","module","define","amd","wangEditor","this","createElemByHTML","html","div","document","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","querySelectorAll","result","DomElement","selectorResult","nodeType","replace","trim","indexOf","length","i","$","objForEach","obj","fn","key","hasOwnProperty","call","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","Bold","editor","$elem","type","_active","DropList","menu","opt","_this","$container","$title","addClass","append","list","onClick","_emptyFn","$list","forEach","item","value","on","e","hideTimeoutId","setTimeout","hide","_rendered","_show","Head","droplist","width","_command","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","BackColor","ForeColor$1","Quote","Code","Emoticon","Table","Video","Menus","menus","Text","Command","API","_currentRange","Editor","toolbarSelector","textSelector","Error","id","editorId","customConfig","prototype","constructor","elem","get","index","first","last","addEventListener","off","removeEventListener","attr","val","getAttribute","setAttribute","className","arr","split","filter","push","join","removeClass","css","currentStyle","style","styleArr","resultArr","map","show","$children","child","appendChild","remove","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","focus","parent","parentUntil","_currentElem","results","equal","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","config","UA","_ua","navigator","userAgent","isWebkit","test","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","reg","cmdValue","queryCommandValue","emptyFn","$textContainerElem","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","title","tpl","$content","_index","stopPropagation","events","event","$inputs","$linkelem","getSelectionContainerElem","createRangeByElem","_createPanel","getSelectionText","link","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$selectionELem","$parentElem","faceHtml","handHtml","target","_insert","emoji","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$currentTd","name","toLowerCase","$table","textValId","MenuConstructors","bold","head","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","panel","getRange","changeActive","getHTML","getText","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","saveRange","$textElem","pHandle","$selectionElem","$p","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_startOffset","startOffset","preventDefault","keyCode","_name","_execCommand","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","execCommand","_range","window","getSelection","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","createRange","selectNode","_initDom","$toolbarSelector","_initConfig","Object","assign","_initCommand","_initSelectionAPI","_initMenus","_initText","create","ex","varArgs","TypeError","to","arguments","nextSource","nextKey","getElementsByTagName"],"mappings":"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","file":"wangEditor.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (selector.nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector)) {\n        // DOM List\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, fn) {\n        return this.forEach(function (elem) {\n            elem.addEventListener(type, fn, false);\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn, false);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text() {\n        var elem = this[0];\n        return elem.innerHTML.replace(/<.*?>/g, function () {\n            return '';\n        });\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (!value) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n/*\n    配置信息\n*/\n\nvar config = {\n    menus: ['head', 'bold', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'table', 'video', 'code', 'undo', 'redo']\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\n\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;');\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    if ($title) {\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n        var value = item.value;\n        if ($elem) {\n            $list.append($elem);\n            $elem.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        list: [{ $elem: $('<li><h1>H1</h1></li>'), value: '<h1>' }, { $elem: $('<li><h2>H2</h2></li>'), value: '<h2>' }, { $elem: $('<li><h3>H3</h3></li>'), value: '<h3>' }, { $elem: $('<li><h4>H4</h4></li>'), value: '<h4>' }, { $elem: $('<li><h5>H5</h5></li>'), value: '<h5>' }, { $elem: $('<li><p>正文</p></li>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n\n    // 状态\n    this._show = false;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        if (this._show) {\n            return;\n        }\n\n        var menu = this.menu;\n        var editor = menu.editor;\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        var height = opt.height || 150; // 默认 100px\n        $container.css('width', width + 'px').css('height', height + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $textContainerElem.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (!this._show) {\n            return;\n        }\n        var $container = this.$container;\n        $container.remove();\n        this._show = false;\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            height: 160,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <table class=\"form-table\">\\n                                <tr>\\n                                    <td>\\u6587\\u5B57</td>\\n                                    <td><input id=\"' + inputTextId + '\" type=\"text\" value=\"' + text + '\"/></td>\\n                                </tr>\\n                                <tr>\\n                                    <td>\\u94FE\\u63A5</td>\\n                                    <td><input id=\"' + inputLinkId + '\" type=\"text\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                                </tr>\\n                            </table>\\n                            <div class=\"w-e-button-container w-e-clear-fix\">\\n                                <button id=\"' + btnOkId + '\" class=\"default left\"><i class=\"w-e-icon-link\"></i> \\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"red right\" style=\"display:' + delBtnDisplay + '\"><i class=\"w-e-icon-trash-o\"></i> \\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        if (!text || !link) {\n            return;\n        }\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        list: [{ $elem: $('<li><b class=\"w-e-icon-list-numbered\"></b> 有序列表</li>'), value: 'insertOrderedList' }, { $elem: $('<li><b class=\"w-e-icon-list2\"></b> 无序列表</li>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        list: [{ $elem: $('<li><b class=\"w-e-icon-paragraph-left\"></b> 靠左</li>'), value: 'justifyLeft' }, { $elem: $('<li><b class=\"w-e-icon-paragraph-center\"></b> 居中</li>'), value: 'justifyCenter' }, { $elem: $('<li><b class=\"w-e-icon-paragraph-right\"></b> 靠右</li>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - backcolor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>文字颜色</p>'),\n        list: [{ $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#ffffff;\"></span></li>'), value: '#ffffff' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#000000;\"></span></li>'), value: '#000000' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#eeece0;\"></span></li>'), value: '#eeece0' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#1c487f;\"></span></li>'), value: '#1c487f' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#4d80bf;\"></span></li>'), value: '#4d80bf' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#c24f4a;\"></span></li>'), value: '#c24f4a' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#8baa4a;\"></span></li>'), value: '#8baa4a' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#7b5ba1;\"></span></li>'), value: '#7b5ba1' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#46acc8;\"></span></li>'), value: '#46acc8' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#f9963b;\"></span></li>'), value: '#f9963b' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - forecolor\n*/\n// 构造函数\nfunction ForeColor$1(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>背景色</p>'),\n        list: [{ $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#ffffff;\"></span></li>'), value: '#ffffff' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#000000;\"></span></li>'), value: '#000000' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#eeece0;\"></span></li>'), value: '#eeece0' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#1c487f;\"></span></li>'), value: '#1c487f' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#4d80bf;\"></span></li>'), value: '#4d80bf' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#c24f4a;\"></span></li>'), value: '#c24f4a' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#8baa4a;\"></span></li>'), value: '#8baa4a' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#7b5ba1;\"></span></li>'), value: '#7b5ba1' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#46acc8;\"></span></li>'), value: '#46acc8' }, { $elem: $('<li><span class=\"w-e-inline-block\" style=\"background-color:#f9963b;\"></span></li>'), value: '#f9963b' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor$1.prototype = {\n    constructor: ForeColor$1,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            height: 240,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;padding:5px;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container w-e-clear-fix\">\\n                            <button id=\"' + btnId + '\" class=\"default left\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 拼接表情字符串\n        var faceHtml = '';\n        var faceStr = '😀 😃 😄 😁 😆 😅 😂  😊 😇 🙂 🙃 😉 😌 😍 😘 😗 😙 😚 😋 😜 😝 😛 🤑 🤗 🤓 😎 😏 😒 😞 😔 😟 😕 🙁  😣 😖 😫 😩 😤 😠 😡 😶 😐 😑 😯 😦 😧 😮 😲 😵 😳 😱 😨 😰 😢 😥 😭 😓 😪 😴 🙄 🤔 😬 🤐';\n        faceStr.split(/\\s/).forEach(function (item) {\n            if (item) {\n                faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n        });\n\n        var handHtml = '';\n        var handStr = '🙌 👏 👋 👍 👎 👊 ✊ ️👌 ✋ 👐 💪 🙏 ️👆 👇 👈 👉 🖕 🖐 🤘 🖖';\n        handStr.split(/\\s/).forEach(function (item) {\n            if (item) {\n                handHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 220,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '表情',\n                // 模板\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                // 事件绑定\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        _this._insert(target.innerHTML);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }, // first tab end\n            {\n                // 标题\n                title: '手势',\n                // 模板\n                tpl: '<div class=\"w-e-emoticon-container\">' + handHtml + '</div>',\n                // 事件绑定\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        _this._insert(target.innerHTML);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // second tab end\n            ] // tabs end\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 插入表情\n    _insert: function _insert(emoji) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<span>' + emoji + '</span>');\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            height: 130,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container w-e-clear-fix\">\\n                            <button id=\"' + btnInsertId + '\" class=\"default left\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th></th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td></td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 270,\n            height: 130,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container w-e-clear-fix\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"default\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"default\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red\">\\u5220\\u9664\\u5217</button>\\n                        </dv>\\n                        <div class=\"w-e-button-container w-e-clear-fix\">\\n                            <button id=\"' + delTableBtnId + '\"><i class=\"w-e-icon-trash-o\"></i> \\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td></td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            height: 120,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <div>\\n                            <input id=\"' + textValId + '\" type=\"text\" style=\"display:block;width:100%;\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        </div>\\n                        <div class=\"w-e-button-container w-e-clear-fix\">\\n                            <button id=\"' + btnId + '\" class=\"default left\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val);\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = BackColor;\n\nMenuConstructors.backColor = ForeColor$1;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                menu.tryChangeActive();\n            }\n        });\n    }\n};\n\n/*\n    编辑区域\n*/\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 获取 html\n    getHTML: function getHTML() {\n        // 检查所有顶级标签，看是否需要用 p 再包裹一遍（针对 div textNode）\n    },\n\n    // 获取 text\n    getText: function getText() {},\n\n    // 获取 json\n    getJSON: function getJSON() {\n        // 先获取 html 再处理成 JSON\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 如果在 <code> 中，要做特殊处理\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        // 保证传入的参数是 html 代码\n        var test = /^<.+>$/.test(html);\n        if (!test && !UA.isWebkit()) {\n            // webkit 可以插入非 html 格式的文字\n            throw new Error('执行 insertHTML 命令时传入的参数必须是 html 格式');\n        }\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选取\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选取\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选取\n        var selection = window.getSelection();\n        var range = selection.getRangeAt(0);\n\n        // 判断选取内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选取\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = range.commonAncestorContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = range.startContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = range.endContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n    },\n\n    // 选取是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选取必须没有内容才可以\n            return;\n        }\n\n        // 目前只支持 webkit 内核\n        if (UA.isWebkit()) {\n            // 插入 &#8203\n            editor.cmd.do('insertHTML', '&#8203;');\n            // 修改 offset 位置\n            range.setEnd(range.endContainer, range.endOffset + 1);\n            // 存储\n            this.saveRange(range);\n        } else {\n            $elem = $('<strong>&#8203;</strong>');\n            editor.cmd.do('insertElem', $elem);\n            this.createRangeByElem($elem, true);\n        }\n    },\n\n    // 根据 $Elem 设置选取\n    createRangeByElem: function createRangeByElem($elem, toStart) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        range.selectNode(elem);\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textElem.addClass('w-e-text');\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n    },\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.text = new Text(this);\n        this.text.init();\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化 DOM\n        this._initDom();\n\n        // 初始化配置信息\n        this._initConfig();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 text\n        this._initText();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 将 css 代码添加到 <style> 中\ndocument.addEventListener('DOMContentLoaded', function (e) {\n    // 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\n    var inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist li {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist li:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist li .w-e-inline-block {  display: inline-block;  *display: inline;  *zoom: 1;  width: 90%;  height: 14px;  border: 1px solid #f1f1f1;}@font-face {  font-family: \\'icomoon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,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) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'icomoon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  z-index: 10001;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  font-size: 100px;  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  background-color: #fff;  color: #333;}.w-e-text-container .w-e-panel-container textarea {  width: 100%;  border: 1px solid #ccc;}.w-e-text-container .w-e-panel-container textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container input[type=text]:focus {  border: 1px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 0.16em;  background-color: #f1f1f1;  border-bottom: 1px solid #ccc;  padding: 2px 10px 0 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 0 15px;  font-size: 0.16em;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content table.form-table {  width: 100%;  border: 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content table.form-table td {  padding: 5px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content table.form-table td input[type=text] {  width: 100%;  border: 0;  border-bottom: 1px solid #ccc;  font-size: 15px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content table.form-table td input[type=text]:focus {  border-bottom-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container {  margin-top: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  color: #999;  border: 1px solid #ccc;  font-size: 14px;  background-color: #fff;  padding: 2px 5px;  cursor: pointer;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.default {  color: #1e88e5;  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: red;  border-color: red;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;}.w-e-text-container .w-e-panel-container input:focus {  outline: none;}.w-e-text-container .w-e-panel-container textarea:focus {  outline: none;}.w-e-text-container .w-e-panel-container button:focus {  outline: none;}.w-e-text-container {  position: relative;  z-index: 10000;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin-left: 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}';\n\n    var style = document.createElement('style');\n    style.type = 'text/css';\n    style.innerHTML = inlinecss;\n    document.getElementsByTagName('HEAD').item(0).appendChild(style);\n});\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n"]}